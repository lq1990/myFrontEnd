var cov_5v6nz1i4b=function(){var path="D:\\myGithub\\myFrontEnd\\NodeJS\\express_crud\\initData.js",hash="8bfedce64c714593c1355acd7e3f70364b0d7b64",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"D:\\myGithub\\myFrontEnd\\NodeJS\\express_crud\\initData.js",statementMap:{"0":{start:{line:29,column:11},end:{line:29,column:24}},"1":{start:{line:30,column:13},end:{line:30,column:28}},"2":{start:{line:31,column:13},end:{line:31,column:30}},"3":{start:{line:33,column:15},end:{line:33,column:35}},"4":{start:{line:35,column:0},end:{line:35,column:36}},"5":{start:{line:51,column:11},end:{line:64,column:2}},"6":{start:{line:68,column:0},end:{line:68,column:26}},"7":{start:{line:71,column:0},end:{line:75,column:3}},"8":{start:{line:77,column:0},end:{line:77,column:28}}},fnMap:{},branchMap:{"0":{loc:{start:{line:35,column:0},end:{line:35,column:35}},type:"binary-expr",locations:[{start:{line:35,column:0},end:{line:35,column:12}},{start:{line:35,column:17},end:{line:35,column:34}}],line:35}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/*
// 初始化默认的测试用户数据
const fs = require("fs");
const path = require("path");

const jsondb = require("./db.json");

// 初始化users属性
jsondb.users || (jsondb.users = []);

for( var i=0;i<33;i++){
    jsondb.users.push({
        id:10010+i,
        name:"aicoder"+i,
        phone:"11223"+i,
        email:"abc@abc.com"
    });
}

// 把数据写入到db.json
fs.writeFileSync(path.join(__dirname,"db.json"), 
                JSON.stringify(jsondb), // 转换成json字符串格式
                {encoding:"utf8"});

console.log("---successfully");
*/ // ==================== practise once more ================================
const fs=(cov_5v6nz1i4b.s[0]++,require("fs"));const path=(cov_5v6nz1i4b.s[1]++,require("path"));const Mock=(cov_5v6nz1i4b.s[2]++,require("mockjs"));const jsondb=(cov_5v6nz1i4b.s[3]++,require("./db.json"));cov_5v6nz1i4b.s[4]++;(cov_5v6nz1i4b.b[0][0]++,jsondb.users)||(cov_5v6nz1i4b.b[0][1]++,jsondb.users=[]);// 短路表达式
//#region 自己写的模拟数据
// for (var i = 0; i < 3; i++) {
//     jsondb.users.push({
//         "id": 20010+i,
//         "name": "aicoder"+i,
//         "phone": "112230"+i,
//         "email": "abc@abc.com"
//     })
//     console.log("-----------");
//     console.log(JSON.stringify(jsondb));
// };
//#endregion
// 使用mock 生成数据
let data=(cov_5v6nz1i4b.s[5]++,Mock.mock({"users|33":[{"id|+1":20000,"name":"@name","email":"@email","phone":"@natural(13200000,13300000)","address":"@county(true)","zip":"@zip","birthday":"@date('yyyy-MM-dd')"}]}));// es6中的展开运算符 ... 三个点。可以展开运算符、对象、数组。
// jsondb.users.push(...data.users);
cov_5v6nz1i4b.s[6]++;jsondb.users=data.users;// 把数据写入到db.json
cov_5v6nz1i4b.s[7]++;fs.writeFileSync(path.join(__dirname,"db.json"),JSON.stringify(jsondb),// 转换成json格式，勿忘
{encoding:"utf8"});cov_5v6nz1i4b.s[8]++;console.log("successfully");